import{r as e,o,a as c,b as n,d as t,F as l,c as a,e as s}from"./app.e1cbe8dc.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const r={},i=a(`<h1 id="\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5" aria-hidden="true">#</a> \u7B97\u6CD5</h1><p>LeetCode\uFF0C\u7B97\u6CD5\u4E2A\u4EBA\u7B14\u8BB0\uFF0C\u521D\u7EA7\u7B97\u6CD5\uFF0Cjavascript\uFF0C</p><p>js\uFF1A\u521B\u5EFA\u591A\u7EF4\u6570\u7EC4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// dp[n][2]</span>
<span class="token keyword">const</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4" aria-hidden="true">#</a> \u6570\u7EC4</h2>`,5),k={id:"_1-\u4E24\u6570\u4E4B\u548C",tabindex:"-1"},d=n("a",{class:"header-anchor",href:"#_1-\u4E24\u6570\u4E4B\u548C","aria-hidden":"true"},"#",-1),b=s(),m={href:"https://leetcode-cn.com/problems/two-sum/",target:"_blank",rel:"noopener noreferrer"},h=s("1. \u4E24\u6570\u4E4B\u548C"),_=a(`<p>\u7ED9\u5B9A\u4E00\u4E2A\u6574\u6570\u6570\u7EC4 <code>nums</code> \u548C\u4E00\u4E2A\u6574\u6570\u76EE\u6807\u503C <code>target</code>\uFF0C\u8BF7\u4F60\u5728\u8BE5\u6570\u7EC4\u4E2D\u627E\u51FA <strong>\u548C\u4E3A\u76EE\u6807\u503C</strong> <em><code>target</code></em> \u7684\u90A3 <strong>\u4E24\u4E2A</strong> \u6574\u6570\uFF0C\u5E76\u8FD4\u56DE\u5B83\u4EEC\u7684\u6570\u7EC4\u4E0B\u6807\u3002</p><blockquote><p>\u8F93\u5165\uFF1Anums = [2,7,11,15], target = 9 \u8F93\u51FA\uFF1A[0,1] \u89E3\u91CA\uFF1A\u56E0\u4E3A nums[0] + nums[1] == 9 \uFF0C\u8FD4\u56DE [0, 1] \u3002</p></blockquote><ul><li><p>\u521B\u5EFA\u4E00\u4E2A map \uFF0C\u7528\u4E8E\u4FDD\u5B58\u54C8\u5E0C\u8868</p></li><li><p>\u904D\u5386\u5230\u6570\u5B57 aa \u65F6\uFF0C\u7528 target \u51CF\u53BB a\uFF0C\u5C31\u4F1A\u5F97\u5230 b\uFF0C\u82E5 b \u5B58\u5728\u4E8E\u54C8\u5E0C\u8868\u4E2D\uFF0C\u6211\u4EEC\u5C31\u53EF\u4EE5\u76F4\u63A5\u8FD4\u56DE\u7ED3\u679C\u4E86\u3002\u82E5 b \u4E0D\u5B58\u5728\uFF0C\u90A3\u4E48\u6211\u4EEC\u9700\u8981\u5C06 a \u5B58\u5165\u54C8\u5E0C\u8868\uFF0C\u597D\u8BA9\u540E\u7EED\u904D\u5386\u7684\u6570\u5B57\u4F7F\u7528\u3002</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">twoSum</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> a<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>a<span class="token operator">&lt;</span>nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>a<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>target <span class="token operator">-</span> nums<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">[</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target <span class="token operator">-</span> nums<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> a<span class="token punctuation">]</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><hr>`,5),f={id:"_26-\u5220\u9664\u6709\u5E8F\u6570\u7EC4\u4E2D\u7684\u91CD\u590D\u9879",tabindex:"-1"},g=n("a",{class:"header-anchor",href:"#_26-\u5220\u9664\u6709\u5E8F\u6570\u7EC4\u4E2D\u7684\u91CD\u590D\u9879","aria-hidden":"true"},"#",-1),w=s(),v={href:"https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/",target:"_blank",rel:"noopener noreferrer"},y=s("26. \u5220\u9664\u6709\u5E8F\u6570\u7EC4\u4E2D\u7684\u91CD\u590D\u9879"),j=a(`<p>\u7ED9\u4F60\u4E00\u4E2A\u6709\u5E8F\u6570\u7EC4 nums \uFF0C\u8BF7\u4F60 \u539F\u5730 \u5220\u9664\u91CD\u590D\u51FA\u73B0\u7684\u5143\u7D20\uFF0C\u4F7F\u6BCF\u4E2A\u5143\u7D20 \u53EA\u51FA\u73B0\u4E00\u6B21 \uFF0C\u8FD4\u56DE\u5220\u9664\u540E\u6570\u7EC4\u7684\u65B0\u957F\u5EA6\u3002</p><p>\u4E0D\u8981\u4F7F\u7528\u989D\u5916\u7684\u6570\u7EC4\u7A7A\u95F4\uFF0C\u4F60\u5FC5\u987B\u5728 \u539F\u5730 \u4FEE\u6539\u8F93\u5165\u6570\u7EC4 \u5E76\u5728\u4F7F\u7528 O(1) \u989D\u5916\u7A7A\u95F4\u7684\u6761\u4EF6\u4E0B\u5B8C\u6210\u3002</p><ul><li><strong>\u6570\u7EC4\u662F\u6709\u5E8F\u7684\uFF0C\u539F\u5730\u5220\u9664\u91CD\u590D\u5143\u7D20\uFF0C\u8FD4\u56DE\u5220\u9664\u540E\u6570\u7EC4\u957F\u5EA6\u3002</strong></li><li>\u5B9A\u4E49 fast \u548C slow \u4E24\u4E2A\u6307\u9488\uFF0C <ul><li>fast\u6307\u9488\u7528\u4E8E\u904D\u5386\u6570\u7EC4\u3002</li><li>slow\u6307\u9488\u7528\u4E8E\u8868\u793A<strong>\u4E0B\u4E00\u4E2A\u4E0D\u540C\u5143\u7D20\u586B\u5165\u7684\u4F4D\u7F6E</strong>\u3002</li></ul></li><li>\u5982\u679C <code>nums[fast]</code> \u4E0E <code>nums[fast-1]</code> \u7684\u503C\u4E0D\u540C\uFF0C\u5C31\u5C06 <code>nums[fast]</code> \u7684\u503C\u590D\u5236\u5230 <code>nums[slow]</code>\uFF0C\u7136\u540Eslow++\u3002</li></ul><p>\u6848\u4F8B\u6D41\u7A0B\uFF1A<code>[0,0,1,1,1,2,2,3,3,4]</code>\uFF1A\u4E00\u5F00\u59CB\u7D22\u5F150\u548C1\u7684\u503C\u90FD\u662F0\uFF0C\u76F8\u540C\u90A3\u4E48\u5C31fast++\uFF08slow\u4E0D\u53D8\uFF0C\u5230\u65F6\u5019\u76F4\u63A5\u8986\u76D6\uFF09\u3002\u7D22\u5F151\u548C2\u76F8\u6BD4\uFF0C\u4E0D\u76F8\u540C\u90A3\u4E48\u5C062 fast\u8986\u76D6\u52301 slow\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u8F93\u5165\uFF1Anums = [0,0,1,1,1,2,2,3,3,4]</span>
<span class="token keyword">var</span> <span class="token function-variable function">removeDuplicates</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> fast<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>slow<span class="token operator">=</span><span class="token number">1</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>fast<span class="token operator">&lt;</span>nums<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>fast<span class="token punctuation">]</span><span class="token operator">!==</span>nums<span class="token punctuation">[</span>fast<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            nums<span class="token punctuation">[</span>slow<span class="token punctuation">]</span><span class="token operator">=</span>nums<span class="token punctuation">[</span>fast<span class="token punctuation">]</span>
            slow<span class="token operator">++</span>
        <span class="token punctuation">}</span>
        fast<span class="token operator">++</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> slow
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><hr>`,6),x={id:"_66-\u52A0\u4E00",tabindex:"-1"},q=n("a",{class:"header-anchor",href:"#_66-\u52A0\u4E00","aria-hidden":"true"},"#",-1),I=s(),A={href:"https://leetcode-cn.com/problems/plus-one/",target:"_blank",rel:"noopener noreferrer"},N=s("66. \u52A0\u4E00"),M=a(`<p>\u7ED9\u5B9A\u4E00\u4E2A\u7531 \u6574\u6570 \u7EC4\u6210\u7684 \u975E\u7A7A \u6570\u7EC4\u6240\u8868\u793A\u7684\u975E\u8D1F\u6574\u6570\uFF0C\u5728\u8BE5\u6570\u7684\u57FA\u7840\u4E0A\u52A0\u4E00\u3002</p><p>\u6700\u9AD8\u4F4D\u6570\u5B57\u5B58\u653E\u5728\u6570\u7EC4\u7684\u9996\u4F4D\uFF0C \u6570\u7EC4\u4E2D\u6BCF\u4E2A\u5143\u7D20\u53EA\u5B58\u50A8\u5355\u4E2A\u6570\u5B57\u3002</p><p>\u4F60\u53EF\u4EE5\u5047\u8BBE\u9664\u4E86\u6574\u6570 0 \u4E4B\u5916\uFF0C\u8FD9\u4E2A\u6574\u6570\u4E0D\u4F1A\u4EE5\u96F6\u5F00\u5934\u3002</p><blockquote><p>\u8F93\u5165\uFF1Adigits = [1,2,3] \u8F93\u51FA\uFF1A[1,2,4] \u89E3\u91CA\uFF1A\u8F93\u5165\u6570\u7EC4\u8868\u793A\u6570\u5B57 123\u3002</p><p>\u8F93\u5165\uFF1Adigits = [1,9] \u8F93\u51FA\uFF1A[2,0]</p></blockquote><ul><li><strong>\u7ED9\u6570\u7EC4\u5C3E\u90E8\u7684\u6570\uFF0C\u52A0\u4E00\uFF0C\u5982\u679C\u662F10\u90A3\u4E48\u8FDB1\u3002</strong></li><li>\u5012\u5E8F\u904D\u5386\uFF0C\u7ED9\u503C<strong>\u52A01</strong>\uFF0Cmod 10\u3002\u5224\u65AD\u662F\u5426\u4E3A0\uFF0C\u5982\u4E3A0\u5219\u9700\u8981\u7EE7\u7EED\u5FAA\u73AF\uFF0C<strong>\u8FDB\u4F4D</strong>\u3002\u76F4\u5230\u4E0D\u4E3A0\u65F6\uFF0C\u8FD4\u56DE\u7ED3\u679C\u3002</li><li>\u6700\u540E\u904D\u5386\u5B8C\u8FD8\u9700\u8981\u8FDB\u4F4D\uFF08999\uFF09\uFF0C\u90A3\u4E48\u6570\u7EC4\u957F\u5EA6+1\uFF0C\u9996\u90E8\u4E3A 1\u3002\uFF081000\uFF09</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">plusOne</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">digits</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> len <span class="token operator">=</span> digits<span class="token punctuation">.</span>length
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span>len<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">&gt;=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        digits<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">++</span>
        digits<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">%=</span> <span class="token number">10</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>digits<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> digits
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    digits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token function">Array</span><span class="token punctuation">(</span>len<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">_</span><span class="token operator">=&gt;</span><span class="token number">0</span><span class="token punctuation">)</span>
    digits<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span>
    <span class="token keyword">return</span> digits
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><hr>`,7),V={id:"_122-\u4E70\u5356\u80A1\u7968\u7684\u6700\u4F73\u65F6\u673A-ii",tabindex:"-1"},B=n("a",{class:"header-anchor",href:"#_122-\u4E70\u5356\u80A1\u7968\u7684\u6700\u4F73\u65F6\u673A-ii","aria-hidden":"true"},"#",-1),E=s(),L={href:"https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-ii/",target:"_blank",rel:"noopener noreferrer"},S=s("122. \u4E70\u5356\u80A1\u7968\u7684\u6700\u4F73\u65F6\u673A II"),C=a(`<p>\u7ED9\u5B9A\u4E00\u4E2A\u6570\u7EC4 <code>prices</code> \uFF0C\u5176\u4E2D <code>prices[i]</code> \u662F\u4E00\u652F\u7ED9\u5B9A\u80A1\u7968\u7B2C <code>i</code> \u5929\u7684\u4EF7\u683C\u3002</p><blockquote><p>\u8F93\u5165: prices = [7,1,5,3,6,4] \u8F93\u51FA: 7 \u89E3\u91CA: \u5728\u7B2C 2 \u5929\uFF08\u80A1\u7968\u4EF7\u683C = 1\uFF09\u7684\u65F6\u5019\u4E70\u5165\uFF0C\u5728\u7B2C 3 \u5929\uFF08\u80A1\u7968\u4EF7\u683C = 5\uFF09\u7684\u65F6\u5019\u5356\u51FA, \u8FD9\u7B14\u4EA4\u6613\u6240\u80FD\u83B7\u5F97\u5229\u6DA6 = 5-1 = 4 \u3002 \u968F\u540E\uFF0C\u5728\u7B2C 4 \u5929\uFF08\u80A1\u7968\u4EF7\u683C = 3\uFF09\u7684\u65F6\u5019\u4E70\u5165\uFF0C\u5728\u7B2C 5 \u5929\uFF08\u80A1\u7968\u4EF7\u683C = 6\uFF09\u7684\u65F6\u5019\u5356\u51FA, \u8FD9\u7B14\u4EA4\u6613\u6240\u80FD\u83B7\u5F97\u5229\u6DA6 = 6-3 = 3 \u3002</p></blockquote><p>1\u3001\u52A8\u6001\u89C4\u5212</p><ul><li>\u5B9A\u4E49\u72B6\u6001 <ul><li><code>dp[i][0]</code>\uFF1A\u7B2C i \u5929 \u624B\u91CC<strong>\u6CA1\u6709\u80A1\u7968</strong>\u7684\u5229\u6DA6\u3002</li><li><code>dp[i][1]</code>\uFF1A\u7B2C i \u5929 \u624B\u91CC<strong>\u6709\u80A1\u7968</strong>\u7684\u5229\u6DA6\u3002</li></ul></li><li><code>dp[i][0]</code>\u7684\u8F6C\u79FB\u65B9\u7A0B <ul><li>\u8F6C\u79FB\u72B6\u60011\uFF1A\u524D\u4E00\u5929\u6CA1\u6709\u80A1\u7968\u3002 <ul><li><code>dp[i-1][0]</code></li></ul></li><li>\u8F6C\u79FB\u72B6\u60012\uFF1A\u524D\u4E00\u5929\u6709\u80A1\u7968\uFF0C\u7136\u540E\u5356\u4E86\uFF0C\u90A3\u4E48\u5C31\u9700\u8981\u52A0\u4E0A prices[i] \u3002 <ul><li><code>dp[i-1][1]+prices[i]</code></li></ul></li></ul></li><li><code>dp[i][1]</code>\u7684\u8F6C\u79FB\u65B9\u7A0B <ul><li>\u8F6C\u79FB\u72B6\u60011\uFF1A\u524D\u4E00\u5929\u6CA1\u6709\u80A1\u7968\uFF0C\u7136\u540E\u4E70\u5165\u4E86\u3002\u9700\u8981\u51CF\u4E0A prices[i] \u3002 <ul><li><code>dp[i-1][1] - price[i]</code></li></ul></li><li>\u8F6C\u79FB\u72B6\u60012\uFF1A\u524D\u4E00\u5929\u6709\u80A1\u7968 <ul><li><code>dp[i-1][1]</code></li></ul></li></ul></li><li>\u6839\u636E\u521D\u59CB\u72B6\u6001\uFF0C\u7B2C 0 \u5929\u65F6 <ul><li><code>dp[0][0]=0</code>\u3001<code>dp[0][1] -= prices[i]</code></li></ul></li><li>\u7ED3\u679C <ul><li>\u4EA4\u6613\u7ED3\u675F\uFF0C\u6301\u6709\u80A1\u7968\u7684\u6536\u76CA<strong>\u4E00\u5B9A\u4F4E\u4E8E</strong>\u4E0D\u6301\u6709\u80A1\u7968\u7684\u6536\u76CA\u3002\uFF08<code>dp[n-1][0] &gt; dp[b-1][1]</code>\uFF09\u3002</li><li>\u56E0\u6B64 <code>renturn dp[n-1][0]</code></li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">maxProfit</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">prices</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> n <span class="token operator">=</span> prices<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">const</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span>prices<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> dp<span class="token punctuation">[</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>2\u3001\u8D2A\u5FC3</p><p>\u8D2A\u5FC3\u7B97\u6CD5\u53EA\u80FD\u7528\u4E8E\u8BA1\u7B97\u6700\u5927\u5229\u6DA6\uFF0C<strong>\u8BA1\u7B97\u7684\u8FC7\u7A0B\u5E76\u4E0D\u662F\u5B9E\u9645\u7684\u4EA4\u6613\u8FC7\u7A0B</strong>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">maxProfit</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">prices</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> sum<span class="token operator">=</span><span class="token number">0</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>prices<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sum <span class="token operator">+=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span>prices<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> sum
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><hr><h3 id="_136-\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u6570\u5B57" tabindex="-1"><a class="header-anchor" href="#_136-\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u6570\u5B57" aria-hidden="true">#</a> 136.\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u6570\u5B57</h3><p>\u7ED9\u5B9A\u4E00\u4E2A<strong>\u975E\u7A7A</strong>\u6574\u6570\u6570\u7EC4\uFF0C\u9664\u4E86\u67D0\u4E2A\u5143\u7D20\u53EA\u51FA\u73B0\u4E00\u6B21\u4EE5\u5916\uFF0C\u5176\u4F59\u6BCF\u4E2A\u5143\u7D20\u5747\u51FA\u73B0\u4E24\u6B21\u3002\u627E\u51FA\u90A3\u4E2A\u53EA\u51FA\u73B0\u4E86\u4E00\u6B21\u7684\u5143\u7D20\u3002</p><blockquote><p>\u8F93\u5165: [2,2,1]</p><p>\u8F93\u51FA: 1</p></blockquote><p>\u7528 \u5F02\u6216 \uFF0C\u53EA\u6709\u76F8\u540C\u65F6\u624D\u662F0\u3002\uFF08<code>1^1=0\u30021^0=1\u3002</code>\uFF09</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">singleNumber</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> result<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> nums<span class="token punctuation">)</span><span class="token punctuation">{</span>
        result <span class="token operator">^=</span> i
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><hr>`,15),D={id:"_189-\u8F6E\u8F6C\u6570\u7EC4",tabindex:"-1"},F=n("a",{class:"header-anchor",href:"#_189-\u8F6E\u8F6C\u6570\u7EC4","aria-hidden":"true"},"#",-1),O=s(),P={href:"https://leetcode-cn.com/problems/rotate-array/",target:"_blank",rel:"noopener noreferrer"},z=s("189. \u8F6E\u8F6C\u6570\u7EC4"),T=a(`<p>\u7ED9\u4F60\u4E00\u4E2A\u6570\u7EC4\uFF0C\u5C06\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u5411\u53F3\u8F6E\u8F6C <code>k</code> \u4E2A\u4F4D\u7F6E\uFF0C\u5176\u4E2D <code>k</code> \u662F\u975E\u8D1F\u6570\u3002</p><blockquote><p>\u8F93\u5165: nums = [1,2,3,4,5,6,7], k = 3 \u8F93\u51FA: [5,6,7,1,2,3,4] \u89E3\u91CA: \u5411\u53F3\u8F6E\u8F6C 1 \u6B65: [7,1,2,3,4,5,6] \u5411\u53F3\u8F6E\u8F6C 2 \u6B65: [6,7,1,2,3,4,5] \u5411\u53F3\u8F6E\u8F6C 3 \u6B65: [5,6,7,1,2,3,4]</p></blockquote><p>1\u3001\u6570\u7EC4\u7FFB\u8F6C</p><table><thead><tr><th>\u64CD\u4F5C</th><th>\u7ED3\u679C</th></tr></thead><tbody><tr><td>\u539F\u59CB\u6570\u7EC4</td><td>1 2 3 4 5 6 7</td></tr><tr><td>\u7FFB\u8F6C\u6240\u6709\u5143\u7D20</td><td><code>7 6 5 4 3 2 1</code></td></tr><tr><td>\u7FFB\u8F6C<code>[0, k mod n-1][0,k mod n\u22121]</code>\u533A\u95F4\u7684\u5143\u7D20</td><td><code>5 6 7</code> 4 3 2 1</td></tr><tr><td>\u7FFB\u8F6C<code>[k mod n, n-1][k mod n,n\u22121]</code>\u533A\u95F4\u7684\u5143\u7D20</td><td>5 6 7 <code>1 2 3 4</code></td></tr></tbody></table><p>\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u7B2C 13 \u884C\uFF0C\u7FFB\u8F6C\u7684\u662F k-1\uFF0C\u56E0\u4E3A start \u662F\u4ECE 0 \u5F00\u59CB\u7684\u3002\uFF08\u5982\u679Ck=3\u90A3\u4E48\u7FFB\u8F6C\u7684\u662F 7 6 5\uFF0C\u7FFB\u8F6C 0\u52302\u7684\u7D22\u5F15\uFF09</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token function-variable function">reverse</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>start<span class="token operator">&lt;</span>end<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">let</span> temp <span class="token operator">=</span> nums<span class="token punctuation">[</span>end<span class="token punctuation">]</span>
        nums<span class="token punctuation">[</span>end<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>start<span class="token punctuation">]</span>
        nums<span class="token punctuation">[</span>start<span class="token punctuation">]</span> <span class="token operator">=</span> temp
        start<span class="token operator">++</span>
        end<span class="token operator">--</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> <span class="token function-variable function">rotate</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> k</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    k <span class="token operator">%=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token function">reverse</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> nums<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token function">reverse</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> k<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token function">reverse</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> k<span class="token punctuation">,</span> nums<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> nums
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><hr>`,7),Z={id:"_217-\u5B58\u5728\u91CD\u590D\u5143\u7D20",tabindex:"-1"},G=n("a",{class:"header-anchor",href:"#_217-\u5B58\u5728\u91CD\u590D\u5143\u7D20","aria-hidden":"true"},"#",-1),H=s(),J={href:"https://leetcode-cn.com/problems/contains-duplicate/",target:"_blank",rel:"noopener noreferrer"},K=s("217. \u5B58\u5728\u91CD\u590D\u5143\u7D20"),Q=a(`<p>\u7ED9\u5B9A\u4E00\u4E2A\u6574\u6570\u6570\u7EC4\uFF0C\u5224\u65AD\u662F\u5426\u5B58\u5728\u91CD\u590D\u5143\u7D20\u3002</p><p>\u5982\u679C\u5B58\u5728\u4E00\u503C\u5728\u6570\u7EC4\u4E2D\u51FA\u73B0\u81F3\u5C11\u4E24\u6B21\uFF0C\u51FD\u6570\u8FD4\u56DE <code>true</code> \u3002\u5982\u679C\u6570\u7EC4\u4E2D\u6BCF\u4E2A\u5143\u7D20\u90FD\u4E0D\u76F8\u540C\uFF0C\u5219\u8FD4\u56DE <code>false</code> \u3002</p><blockquote><p>\u8F93\u5165: [1,2,3,1] \u8F93\u51FA: true</p></blockquote><ul><li>\u5BF9\u4E8E\u6570\u7EC4\u4E2D\u6BCF\u4E2A\u5143\u7D20\uFF0C\u6211\u4EEC\u5C06\u5B83\u63D2\u5165\u5230\u54C8\u5E0C\u8868\u4E2D\u3002\u5982\u679C\u63D2\u5165\u4E00\u4E2A\u5143\u7D20\u65F6\u53D1\u73B0\u8BE5\u5143\u7D20\u5DF2\u7ECF\u5B58\u5728\u4E8E\u54C8\u5E0C\u8868\u4E2D\uFF0C\u5219\u8BF4\u660E\u5B58\u5728\u91CD\u590D\u7684\u5143\u7D20\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">containsDuplicate</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>set<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span>
        set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><hr>`,6),R={id:"_283-\u79FB\u52A8\u96F6",tabindex:"-1"},U=n("a",{class:"header-anchor",href:"#_283-\u79FB\u52A8\u96F6","aria-hidden":"true"},"#",-1),W=s(),X={href:"https://leetcode-cn.com/problems/move-zeroes/",target:"_blank",rel:"noopener noreferrer"},Y=s("283. \u79FB\u52A8\u96F6"),$=a(`<p>\u7ED9\u5B9A\u4E00\u4E2A\u6570\u7EC4 <code>nums</code>\uFF0C\u7F16\u5199\u4E00\u4E2A\u51FD\u6570\u5C06\u6240\u6709 <code>0</code> \u79FB\u52A8\u5230\u6570\u7EC4\u7684\u672B\u5C3E\uFF0C\u540C\u65F6\u4FDD\u6301\u975E\u96F6\u5143\u7D20\u7684\u76F8\u5BF9\u987A\u5E8F\u3002</p><blockquote><p>\u8F93\u5165: [0,1,0,3,12] \u8F93\u51FA: [1,3,12,0,0]</p></blockquote><ul><li>\u8BBE\u7F6E\u6307\u9488 left \u548C right\uFF0C<strong>left\u6307\u9488\u6C38\u8FDC\u6307\u5411 0</strong>\u3002</li><li>right \u5F53\u904D\u5386\u5230\u4E0D\u662F 0 \u65F6\uFF0C\u4EA4\u6362 <code>nums[left]</code> \u548C <code>nums[right]</code>\u3002\u56E0\u4E3Aleft\u4E00\u76F4\u90FD\u662F\u6307\u54110\u3002</li><li>\u6BCF\u6267\u884C\u4E00\u6B21\u5FAA\u73AF right \u81EA\u52A0 1\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">moveZeroes</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> left<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>right<span class="token operator">=</span><span class="token number">0</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>right<span class="token operator">&lt;</span>nums<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token operator">!==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token function">swap</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span>left<span class="token punctuation">,</span>right<span class="token punctuation">)</span>
            left<span class="token operator">++</span>
        <span class="token punctuation">}</span>
        right<span class="token operator">++</span>
    <span class="token punctuation">}</span>
  <span class="token keyword">return</span> nums
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span>l<span class="token punctuation">,</span>r</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> temp<span class="token operator">=</span>nums<span class="token punctuation">[</span>r<span class="token punctuation">]</span>
    nums<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token operator">=</span>nums<span class="token punctuation">[</span>l<span class="token punctuation">]</span>
    nums<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token operator">=</span>temp
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><hr>`,5),nn={id:"_350-\u4E24\u4E2A\u6570\u7EC4\u7684\u4EA4\u96C6-ii",tabindex:"-1"},sn=n("a",{class:"header-anchor",href:"#_350-\u4E24\u4E2A\u6570\u7EC4\u7684\u4EA4\u96C6-ii","aria-hidden":"true"},"#",-1),an=s(),pn={href:"https://leetcode-cn.com/problems/intersection-of-two-arrays-ii/",target:"_blank",rel:"noopener noreferrer"},tn=s("350. \u4E24\u4E2A\u6570\u7EC4\u7684\u4EA4\u96C6 II"),en=a(`<blockquote><p>\u8F93\u5165\uFF1Anums1 = [1,2,2,1], nums2 = [2,2] \u8F93\u51FA\uFF1A[2,2]</p></blockquote><ul><li>\u5148\u7ED9\u4E24\u4E2A\u6570\u7EC4\u8FDB\u884C\u5347\u5E8F\u6392\u5E8F\uFF0C\u5B9A\u4E49\u4E00\u4E2A arr \u6570\u7EC4</li><li>\u5B9A\u4E49 i \u548C j \u6307\u9488\uFF0C\u5BF9\u5E94nums1\u548Cnums2</li><li>\u5224\u65AD\u4E24\u6570\u7EC4\u503C\u662F\u5426\u76F8\u540C\uFF0C\u5982\u679C\u76F8\u540C\u5219 \u5165\u6808</li><li>\u5982\u679C\u503C\u4E0D\u540C\uFF0C\u90A3\u4E48\u5224\u65AD <code>nums1[i]</code> \u548C <code>nums2[i]</code>\uFF0C\u54EA\u4E2A\u503C\u66F4\u5C0F\uFF0C\u5C0F\u7684\u90A3\u4E2A\u5219<strong>\u81EA\u52A01</strong>\uFF0C\u56E0\u4E3A\u6570\u7EC4\u662F\u6309\u7167\u5347\u5E8F</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">intersect</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">nums1<span class="token punctuation">,</span> nums2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    nums1<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">-</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
    nums2<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">-</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>j<span class="token operator">=</span><span class="token number">0</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>i<span class="token operator">&lt;</span>nums1<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> j<span class="token operator">&lt;</span>nums2<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>nums1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">===</span>nums2<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>nums1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
            i<span class="token operator">++</span>
            j<span class="token operator">++</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> nums1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&gt;</span>nums2<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">?</span> j<span class="token operator">++</span><span class="token operator">:</span>i<span class="token operator">++</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>`,3);function on(cn,ln){const p=e("ExternalLinkIcon");return o(),c(l,null,[i,n("h3",k,[d,b,n("a",m,[h,t(p)])]),_,n("h3",f,[g,w,n("a",v,[y,t(p)])]),j,n("h3",x,[q,I,n("a",A,[N,t(p)])]),M,n("h3",V,[B,E,n("a",L,[S,t(p)])]),C,n("h3",D,[F,O,n("a",P,[z,t(p)])]),T,n("h3",Z,[G,H,n("a",J,[K,t(p)])]),Q,n("h3",R,[U,W,n("a",X,[Y,t(p)])]),$,n("h3",nn,[sn,an,n("a",pn,[tn,t(p)])]),en],64)}var kn=u(r,[["render",on]]);export{kn as default};
